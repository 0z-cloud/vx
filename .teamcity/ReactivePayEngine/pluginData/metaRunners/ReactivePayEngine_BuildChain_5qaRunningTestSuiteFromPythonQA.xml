<?xml version="1.0" encoding="UTF-8"?>
<meta-runner name="5: QA | Running test suite from PythonQA">
  <description>QA Section Meta</description>
  <settings>
    <parameters>
      <param name="ANSIBLE_APPLICATION_TYPE" value="" />
      <param name="ANSIBLE_BUILD_ID" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAME" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAMESPACE" value="" />
      <param name="ANSIBLE_CLOUD_TYPE" value="" />
      <param name="ANSIBLE_COMMIT_SHA" value="" />
      <param name="ANSIBLE_DEPLOY_USERNAME" value="" />
      <param name="ANSIBLE_ENVIRONMENT" value="" />
      <param name="ANSIBLE_PRODUCT_NAME" value="" />
      <param name="ANSIBLE_REGISTRY_URL" value="" />
      <param name="ANSIBLE_REGISTRY_USERNAME" value="" />
      <param name="ANSIBLE_RUN_TYPE" value="" />
      <param name="ANSIBLE_TRIGGER_TOKEN" value="" spec="text validationMode='any' display='normal'" />
      <param name="ANSIBLE_VERSION" value="" />
      <param name="NG_DEPLOY_PASSWORD" value="credentialsJSON:08eea89d-0ea4-41b3-8968-aa48280a6e9c" spec="password description='NG_DEPLOY_PASSWORD' label='NG_DEPLOY_PASSWORD' display='prompt'" />
      <param name="env.ANSIBLE_ENVIRONMENT" value="%ANSIBLE_ENVIRONMENT%" />
    </parameters>
    <build-runners>
      <runner name="Run QA tests" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo "Show running dir contents"

ls -la ./

echo "Load the current tags"

cat ./.local/current_tags.yml

echo "Load the current version"

. ./.local/ci_version.sh

echo "Docker Login:"

docker login "%ANSIBLE_REGISTRY_URL%" -u "%ANSIBLE_REGISTRY_USERNAME%" -p "%ANSIBLE_TRIGGER_TOKEN%"

echo "Change dir to ansible"

cd ./ansible

echo "Show the current .local folder"

ls -la ../.local

echo "Show the password and vault password"

#A_DEPLOY_PASSWORD=`cat ../.local/pass.yml`
#A_VAULT_PASSWORD=`cat ../.local/vault_pass.yml`

. ../.local/ci_vault.sh

echo "A_DEPLOY_PASSWORD $A_DEPLOY_PASSWORD"
echo "A_VAULT_PASSWORD $A_VAULT_PASSWORD"

echo "Start run QA section, perform generate settings"

./!_0z-quality_assurance.sh "$ANSIBLE_ENVIRONMENT" "$ANSIBLE_PRODUCT_NAME" "$ANSIBLE_DEPLOY_USERNAME" "$A_DEPLOY_PASSWORD" "$ANSIBLE_APPLICATION_TYPE" "$ANSIBLE_RUN_TYPE" "$ANSIBLE_CLOUD_TYPE" "$A_VAULT_PASSWORD" "$ANSIBLE_REGISTRY_URL" "$ANSIBLE_CI_PROJECT_NAME" "$ANSIBLE_CI_PROJECT_NAMESPACE" "$ANSIBLE_CI_VERSION"

echo "Change dir to PythonQA for run suite"

ls -la ../PythonQA

echo "Load the current QA settings per environment"

cat ../PythonQA/env.sh

echo "Change dir to test suite folder"

cd ../PythonQA

echo "Install python requirements"

pip3 install --no-cache-dir -r ./requirements.txt

echo "Load the current QA settings per environment"

. ./env.sh

echo "Run QA test suite"
echo "START"

session_id=$(python3 -s -m pytest metabase/session_test.py --runslow $session_data --tb=long)

echo "PRINT"

echo $session_id | sed -e 's/.*SessionID:\([0-9]\+\)*//g' | awk '{print $1}' | sed -e 's/\|n//g' | sed -e "s/\\'//g" | sed -e "s/\\']//g"

session_key=$(echo $session_id | sed -e 's/.*SessionID:\([0-9]\+\)*//g' | awk '{print $1}' | sed -e 's/\|n//g' | sed -e "s/\\']//g" | sed -e 's/\|//g' | sed -e "s/\\|']//g" | sed -e "s/\|//g" )

echo "session parse is: $session_parse"
echo "session key is: $session_key"
echo "session data is: $session_data"

session_token_result=$(echo $session_key |  cut -f1 -d "|")
echo "session_token_result: $session_token_result"

python3 -m pytest -p no:cacheprovider --direction %ANSIBLE_ENVIRONMENT% --session $session_token_result

echo "End"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <requirements />
  </settings>
</meta-runner>

