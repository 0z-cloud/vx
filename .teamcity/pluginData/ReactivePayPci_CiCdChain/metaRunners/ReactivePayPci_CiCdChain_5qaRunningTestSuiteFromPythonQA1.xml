<?xml version="1.0" encoding="UTF-8"?>
<meta-runner name="QA Section Meta">
  <description>QA Section Meta</description>
  <settings>
    <parameters>
      <param name="ANSIBLE_APPLICATION_TYPE" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAME" value="" />
      <param name="ANSIBLE_CI_PROJECT_NAMESPACE" value="" />
      <param name="ANSIBLE_CI_VERSION" value="" />
      <param name="ANSIBLE_CLOUD_TYPE" value="" />
      <param name="ANSIBLE_COMMIT_SHA" value="%system.build.vcs.number%" />
      <param name="ANSIBLE_DEPLOY_USERNAME" value="" />
      <param name="ANSIBLE_ENVIRONMENT" value="" />
      <param name="ANSIBLE_PRODUCT_NAME" value="" />
      <param name="ANSIBLE_REGISTRY_URL" value="" />
      <param name="ANSIBLE_REGISTRY_USERNAME" value="" />
      <param name="ANSIBLE_RUN_TYPE" value="" />
      <param name="ANSIBLE_TRIGGER_TOKEN" value="" spec="text display='normal' validationMode='any'" />
      <param name="ANSIBLE_VERSION" value="" />
      <param name="MAIN_ANSIBLE_BUILD_ID" value="%env.BUILD_NUMBER%" />
      <param name="RunningOfferForBuild" value="" />
      <param name="RunningOfferForPublish" value="" />
      <param name="RunningOnlyQA" value="" />
      <param name="A_DEPLOY_PASSWORD" value="" spec="password display='normal'" />
      <param name="A_ENV_SECURITY" value="" />
      <param name="A_VAULT_PASSWORD" value="" spec="password display='normal'" />
      <param name="INIT_PASS" value="" spec="password display='normal'" />
      <param name="message" value="" spec="password display='normal'" />
    </parameters>
    <build-runners>
      <runner name="Run QA tests" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo "Show running dir contents"
echo "start";
              echo %ANSIBLE_COMMIT_SHA%;
              echo %ANSIBLE_DEPLOY_USERNAME%;
              echo %ANSIBLE_APPLICATION_TYPE%;
              echo %ANSIBLE_BUILD_ID%;
              echo %ANSIBLE_CI_PROJECT_NAME%;
              echo %ANSIBLE_CI_PROJECT_NAMESPACE%;
              echo %ANSIBLE_CLOUD_TYPE%;
              echo %ANSIBLE_COMMIT_SHA%;
              echo %ANSIBLE_DEPLOY_USERNAME%;
              echo %ANSIBLE_ENVIRONMENT%;
              echo %ANSIBLE_PRODUCT_NAME%;
              echo %ANSIBLE_REGISTRY_URL%;
              echo %ANSIBLE_REGISTRY_USERNAME%;
              echo %ANSIBLE_RUN_TYPE%;
              echo %ANSIBLE_VERSION%;
              echo %A_ENV_SECURITY%;
              echo %MAIN_ANSIBLE_BUILD_ID%;
              echo %RunningOfferForBuild%;
              echo %RunningOnlyQA%;
              echo "done show params"

              echo "show encrypted values";
              echo %A_VAULT_PASSWORD%;
              echo %A_DEPLOY_PASSWORD%;
              echo "done encrypted show params"

              RUNNING_ONLY_QA="%RunningOnlyQA%";

              echo "MAIN_ANSIBLE_BUILD_ID: %MAIN_ANSIBLE_BUILD_ID%";
              echo "ANSIBLE_COMMIT_SHA: %ANSIBLE_COMMIT_SHA%";
              echo "A_ENV_SECURITY: %A_ENV_SECURITY%";

              ANSIBLE_COMMIT_SHA_SHORT=`echo %ANSIBLE_COMMIT_SHA% | head -c 8`
              DATE_YEAR=`date '+%Y'`
              DATE_MOUTH=`date '+%m'`
              ANSIBLE_CI_VERSION="${DATE_YEAR}.${DATE_MOUTH}.%MAIN_ANSIBLE_BUILD_ID%-${ANSIBLE_COMMIT_SHA_SHORT}"

              echo "ANSIBLE_CI_VERSION: $ANSIBLE_CI_VERSION" >> ./ci_version.yml

			  echo "ANSIBLE_CI_VERSION: $ANSIBLE_CI_VERSION"


. ./.local/ci_version.sh

cat ./.local/current_tags.yml
ls -la ./

echo "Load the current tags"

cat ./.local/current_tags.yml

echo "Load the current version"

. ./.local/ci_version.sh

echo "Docker Login:"

docker login "%ANSIBLE_REGISTRY_URL%" -u "%ANSIBLE_REGISTRY_USERNAME%" -p "%ANSIBLE_TRIGGER_TOKEN%"

echo "Test env"
cd ./ansible/group_vars/!_Python_QA
python3 decrypt.py wiretest

echo "Change dir to ansible"
cd ../../

echo "Show the current .local folder"

ls -la ../.local

echo "Show the password and vault password"

#A_DEPLOY_PASSWORD=`cat ../.local/pass.yml`
#A_VAULT_PASSWORD=`cat ../.local/vault_pass.yml`

#. ../.local/ci_vault.sh

echo "Start run QA section, perform generate settings"

./!_0z-quality_assurance.sh "%ANSIBLE_ENVIRONMENT%" "%ANSIBLE_PRODUCT_NAME%" "%ANSIBLE_DEPLOY_USERNAME%" "%secure:teamcity.password.A_DEPLOY_PASSWORD%" "%ANSIBLE_APPLICATION_TYPE%" "%ANSIBLE_RUN_TYPE%" "%ANSIBLE_CLOUD_TYPE%" "%secure:teamcity.password.A_VAULT_PASSWORD%" "%ANSIBLE_REGISTRY_URL%" "%ANSIBLE_CI_PROJECT_NAME%" "%ANSIBLE_CI_PROJECT_NAMESPACE%" "$ANSIBLE_CI_VERSION"

echo "Change dir to PythonQA for run suite"

ls -la ../PythonQA

echo "Change dir to test suite folder"

cd ../PythonQA

echo "Install python requirements"

pip3 install --no-cache-dir -r ./requirements.txt

echo "Load the current QA settings per environment"

. ./env.sh

echo "Run QA test suite"
echo "START"

python3 decrypt.py wiretest

session_id=$(python3 -s -m pytest metabase/session_test.py --runslow $session_data --tb=long)

echo $session_id | sed -e 's/.*SessionID:\([0-9]\+\)*//g' | awk '{print $1}' | sed -e 's/\|n//g' | sed -e "s/\\'//g" | sed -e "s/\\']//g"

session_key=$(echo $session_id | sed -e 's/.*SessionID:\([0-9]\+\)*//g' | awk '{print $1}' | sed -e 's/\|n//g' | sed -e "s/\\']//g" | sed -e 's/\|//g' | sed -e "s/\\|']//g" | sed -e "s/\|//g" )

session_token_result=$(echo $session_key |  cut -f1 -d "|")
echo "session_token_result: $session_token_result"

python3 -m pytest -p no:cacheprovider --direction %ANSIBLE_ENVIRONMENT% --session $session_token_result

echo "End"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <requirements />
  </settings>
</meta-runner>

