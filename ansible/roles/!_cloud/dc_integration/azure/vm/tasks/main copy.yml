- name: Create a new droplet
  community.digitalocean.digital_ocean_droplet:
    state: present
    name: "{{ item['value']['name'] }}"
    unique_name: yes
    oauth_token: 
    size: "s-2vcpu-2gb"
    region: ams3
    image: ubuntu-20-04-x64
    wait_timeout: 500
    private_networking: yes
    # ssh_keys: [ .... ]
  register: create_instance_result
  with_dict: "{{ cloud_bootstrap.servers }}"

- name: Show IaC returned create_instance_result full results from Cloud Api DigitalOcean
  debug: 
    msg: "{{ create_instance_result }}"

- name: adad
  debug: 
    msg: "
      {{ item.value.droplet.name }} 
      
      {{ item.value.droplet.networks.v4[1].ip_address }} {{ item.value.droplet.networks.v4[1].gateway }}

      {{ item.value.droplet.networks.v4[0].ip_address }} {{ item.value.droplet.networks.v4[0].gateway }}

      "
    
    #|
      # "{% for it in item %}{% if it == 'data' %}{{ item }}{% endif %}{% endfor %}"
    # msg: "ID is {{ item.data.droplet.id }}, IP is {{ item.data.ip_address }}"
  with_dict: "{{ create_instance_result.results }}"
  when: "item.key == 'data'"

- name: Copy 0z inventory to work ignored copy for generate the local inventory
  copy:
    src: "inventories/0z-cloud/products/types/!_do/{{ ansible_product }}/{{ ansible_environment }}/bootstrap_vms/group_vars/all.yml"
    dest: "inventories/0z-cloud/products/types/!_do/{{ ansible_product }}/{{ ansible_environment }}/bootstrap_vms/group_vars/.do.cloud.run.yml"
  when: destroy_instances is not defined

- name: Line public_ip_address in file change for dynamic inventory
  lineinfile:
    path: inventories/0z-cloud/products/types/!_do/{{ ansible_product }}/{{ ansible_environment }}/bootstrap_vms/group_vars/.do.cloud.run.yml
    regexp: '^(.*\ip: "{{ item.value.droplet.name }}_public_ip_address_REPLACED")'
    line: '        ip: "{{ item.value.droplet.networks.v4[1].ip_address }}"'
  with_dict: "{{ create_instance_result.results }}"
  when: "destroy_instances is not defined and item.key == 'data'"

- name: Line private_ip_address in file change for dynamic inventory
  lineinfile:
    path: inventories/0z-cloud/products/types/!_do/{{ ansible_product }}/{{ ansible_environment }}/bootstrap_vms/group_vars/.do.cloud.run.yml
    regexp: '^(.*\_ip: "{{ item.value.droplet.name }}_private_ip_address_REPLACED")'
    line: '            second_ip: "{{ item.value.droplet.networks.v4[0].ip_address }}"'
  with_dict: "{{ create_instance_result.results }}"
  when: "destroy_instances is not defined and item.key == 'data'"