# - name: Create an a network (VPC = Virtual Private Cloud, Zone place of you Network Environment) in Google Cloud Platform
#   google.cloud.gcp_compute_network:
#     name: '{{ item.value.anycloud_defaults_virtual_cloud_primary_network_virtual_communication_device_name }}'
#     project: "{{ ansible_product_id }}"
#     auth_kind: "{{ anycloud_cred_kind }}"
#     service_account_file: "{{ anycloud_cred_file }}"
#     state: present
#   register: network
#   with_dict: "{{ cloud_bootstrap.switches }}"
# ######


# - name: Manage, or re/Create a an instance At Google Cloud Platform
#   gcp_compute_instance:
#       state: present
#       name: '{{ item.value.name }}'
#       machine_type: '{{ item.value.anycloud_vm_performance_configuration }}'      
#       disks:
#         - auto_delete: true
#           boot: true
#           source: "{{ disk }}"
#       network_interfaces:
#           - network: null # use default
#             access_configs:
#               - name: 'External NAT'
#                 nat_ip: "{{ address }}"
#                 type: 'ONE_TO_ONE_NAT'
#       zone: "{{ anycloud_zone }}"
#       project: "{{ ansible_product }}"
#       auth_kind: "{{ google_cloud_account_type }}"
#       service_account_file: "{{ google_gcp_private_creds_api_token_access_key }}"
#       scopes:
#         - https://www.googleapis.com/auth/compute
#   register: instance
#   with_dict: "{{ cloud_bootstrap.servers }}"


# #  anycloud_zone 

# - name: Templte account access file
#   template:
#     src: account.json.j2
#     dest: ../.cloud/google.json


  - name: debug servers
    debug:
      msg: "{{ item.value.name }}"
    with_dict: "{{ cloud_bootstrap.servers }}"


  #  - name: create a disk
  #    gcp_compute_disk:
  #        name: 'disk-instance'
  #        size_gb: 50
  #        source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts'
  #        zone: "{{ zone }}"
  #        project: "{{ gcp_project }}"
  #        auth_kind: "{{ gcp_cred_kind }}"
  #        service_account_file: "{{ gcp_cred_file }}"
  #        scopes:
  #          - https://www.googleapis.com/auth/compute
  #        state: present

  # - name: create a disk
  #   gcp_compute_disk:
  #       name: "disk-instance-{{ item.value.name | join }}"
  #       size_gb: 50
  #       source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts'
  #       zone: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_ZONE_REGIONE_NAME | join }}"
  #       project: "{{ gcp_project }}"
  #       auth_kind: "serviceaccount"
  #       service_account_file: "~/google.json"
  #       scopes:
  #         - https://www.googleapis.com/auth/compute
  #       state: present
  #   register: disk
  #   with_dict: "{{ cloud_bootstrap.servers }}"
  - name: create a disk
    google.cloud.gcp_compute_disk:
      name: "disk-instance-{{ item.value.name | join }}"
      size_gb: 50
      # disk_encryption_key:
      #   raw_key: SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=
      zone: "{{ anycloud_zone }}"
      project: "{{ gcp_project }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
    with_dict: "{{ cloud_bootstrap.servers }}"
    register: instance_disk


  - name: Call the gcp_resourcemanager_project - Creates a GCP Project
    google.cloud.gcp_resourcemanager_project:
      name: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}"
      id: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}-{{ 10000000000 | random }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      # parent:
      #   type: organization
      #   id: 636173955921
      state: present

  - name: Create a disk
    google.cloud.gcp_compute_disk:
      name: "disk-instance-{{ item.value.name | join }}"
      size_gb: 50
      source_image: 'projects/ubuntu-os-cloud/global/images/family/ubuntu-2004-lts'
      zone: "{{ anycloud_zone }}"
      project: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
      scopes:
        - https://www.googleapis.com/auth/compute
    #register: disk
    register: instance_disk
    with_dict: "{{ cloud_bootstrap.servers }}"


  - name: Create an a Public address
    google.cloud.gcp_compute_address:
      name: "{{ item.value.name }}_public"
      region: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_Z_REGIONE }}"
      project: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
      scopes:
        - https://www.googleapis.com/auth/compute
    register: instance_public_address
    with_dict: "{{ cloud_bootstrap.servers }}"


    # - name: Create Firewall Rule with Source Range
    #   gce_net:
    #     name: "{{ ansible_environment }}_network_private"
    #     fwname: "allow-internal"
    #     state: "present"
    #     src_range: ['10.0.0.0/16']
    #     subnet_name: public-subnet
    #     allowed: 'tcp'
    #     project: "{{ ansible_product }}"
    #     auth_kind: serviceaccount
    #     service_account_file: "~/google.json"
    #   tags:
    #   - recipe6


  - name: Create a network for ennvironment
    google.cloud.gcp_compute_network:
      name: "{{ ansible_environment }}_network_private"
      auto_create_subnetworks: 'true'
      project: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
    register: network


  - name: Create an a Private address
    google.cloud.gcp_compute_address:
      address_type: "INTERNAL"
      name: "{{ item.value.name }}_private"
      region: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_Z_REGIONE }}"
      project: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_PROJECT_NAME }}-{{ ansible_environment }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
      scopes:
        - https://www.googleapis.com/auth/compute
    register: instance_private_address
    with_dict: "{{ cloud_bootstrap.servers }}"

  - name: Show created addresses
    debug:
      msg: "{{ item }}"
    with_dict: 
      - "{{ instance_private_address }}"
      - "{{ instance_public_address }}"

  - name: Show created disk
    debug:
      msg: "{{ item }}"
    with_dict: 
      - "{{ instance_disk }}"



  # - name: create a instance
  #   gcp_compute_instance:
  #       state: present
  #       name: test-vm
  #       machine_type: n1-standard-1
  #       disks:
  #         - auto_delete: true
  #           boot: true
  #           source: "{{ disk }}"
  #       network_interfaces:
  #           - network: null # use default
  #             access_configs:
  #               - name: 'External NAT'
  #                 nat_ip: "{{ address }}"
  #                 type: 'ONE_TO_ONE_NAT'
  #       zone: "{{ zone }}"
  #       project: "{{ gcp_project }}"
  #       auth_kind: serviceaccount
  #       service_account_file: "~/google.json"
  #       scopes:
  #         - https://www.googleapis.com/auth/compute
  #   register: instance

  - name: Create a GCP Compute instance
    google.cloud.gcp_compute_instance:
      name: "{{ item.value.name }}"
      machine_type: "{{ item.value.anycloud_vm_performance_configuration }}"
      hostname: "{{ item.value.name }}"
      disks:
      - auto_delete: 'true'
        boot: 'true'
        source: "disk-instance-{{ item.value.name | join }}"
      - auto_delete: 'true'
        interface: "NVME"
        type: "SCRATCH"
        initialize_params:
          disk_type: local-ssd
      metadata:
        startup-script-url: "gs:://graphite-playground/bootstrap.sh"
        cost-center: '12345'
      labels:
        environment: "{{ ansible_environment }}"
      network_interfaces:
      - network: "{{ item.name.network }}"
        access_configs:
        - name: "External NAT"
          nat_ip: "{{ item.value.name }}_public"
          type: "ONE_TO_ONE_NAT"
      - network: "{{ ansible_environment }}_network_private"
        access_configs:
        - name: "Private Net"
          ip: "{{ item.value.name }}_private"
      zone: "{{ EVE_CLOUD_DEFAULT_EVE_GCP_ZONE_REGIONE_NAME }}"
      project: "{{ ansible_product }}"
      auth_kind: serviceaccount
      service_account_file: "~/google.json"
      state: present
    register: instance
    with_dict: "{{ cloud_bootstrap.servers }}"



  - name: Show Created Instance Result
    debug:
        msg: "{{ item }}"
    with_items: "{{ instance }}"




# - name: here, 'users' contains the above list of employees
#   mysql_user:
#     name: "{{ item[0] }}"
#     priv: "{{ item[1] }}.*:ALL"
#     append_privs: yes
#     password: "foo"
#   with_nested:
#     - "{{ users }}"
#     - [ 'clientdb', 'employeedb', 'providerdb' ]
