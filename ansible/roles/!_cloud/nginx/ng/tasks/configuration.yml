---
- name: Copy the nginx configuration file
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
  notify:
   - restart nginx
  tags: [configuration,nginx]

# - name: Validate the nginx.conf include files dirs of environments
#   lineinfile:
#     path: "{{ nginx_conf_dir }}/nginx.conf"
#     state: present
#     line: 'include /etc/nginx/sites-enabled/{{ ansible_environment }}/*.conf;'
#     regexp: 'include /etc/nginx/sites-enabled/{{ ansible_environment }}$'
#     insertater: include /etc/nginx/sites-enabled/*;
# #include /etc/nginx/sites-enabled/*;

# - name: Validate the nginx.conf no include files dirs of environments
#   lineinfile:
#     path: "{{ nginx_conf_dir }}/nginx.conf"
#     state: absent
#     line: 'include /etc/nginx/sites-available/{{ ansible_environment }}/*.conf;'
#     insertbefore: '#END MARK'

- name: Ensure auth_basic files created
  template:
    src: auth_basic.j2
    dest: "{{ nginx_conf_dir }}/auth_basic/{{ item }}"
    owner: root
    group: "{{ nginx_group }}"
    mode: 0750
  with_items: "{{ nginx_auth_basic_files }}"
  tags: [configuration,nginx]

- name: Create the configurations for all sites
  template:
    src: site.conf.j2
    dest: "{{ nginx_conf_dir }}/sites-available//{{ ansible_environment }}/{{ item['name'] | join }}.conf"
  with_items: "{{ nginx_sites }}"
  notify:
   - reload nginx
  tags: [configuration,nginx]
  
- name: CI | Remove links for all sites in environment
  shell: "rm -rf {{ nginx_conf_dir }}/sites-enabled/{{ ansible_environment }}/*"
  register: removed_links_on_current_env
  tags: [configuration,nginx]

- name: DEBUG | Show results if possible
  debug:
    msg: "{{ removed_links_on_current_env }}"

- name: CI | Create links for sites-enabled
  file:
    state: link
    src: "{{ nginx_conf_dir }}/sites-available/{{ ansible_environment }}/{{ item['name'] | join }}.conf"
    dest: "{{ nginx_conf_dir }}/sites-enabled/{{ ansible_environment }}/{{ item['name'] | join }}.conf"
  with_items: "{{ unificated_sites_enabled }}"
  tags: [configuration,nginx]

- name: GEN UPSTREAMS | Create the configurations for independent config file
  template:
    src: config.conf.j2
    dest: "{{ nginx_conf_dir }}/conf.d/{{ item }}.conf"
  with_items: "{{ nginx_configs }}"
  tags: [debug,configuration,nginx]

- name: Create the configurations for same config file
  template:
    src: same.conf.j2
    dest: "{{ nginx_conf_dir }}/same.d/{{ item }}.conf"
  with_items: "{{ nginx_same }}"
  tags: [configuration,nginx]