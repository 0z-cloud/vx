{% raw %}
[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target docker.socket
# Requires=docker.socket

[Service]
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
ExecReload=/bin/kill -s HUP $MAINPID
{% endraw %}

{% if 'edge-servers' in group_names %}

{% raw %}ExecStart=/usr/bin/dockerd -H tcp://{% endraw %}{{ hostvars[inventory_hostname]['second_ip'] }}{% raw %}:{% endraw %}{{ docker_custom_port }}{% raw %} -H unix:///var/run/docker.sock {% endraw %}

{% else %}

{% if docker is defined %}

{% raw %}
ExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock 
{% endraw %}

{% else %}

{% raw %}
ExecStart=/usr/bin/dockerd -H tcp://{% endraw %}{{ hostvars[inventory_hostname]['second_ip'] }}{% raw %}:2375 -H unix:///var/run/docker.sock 

{% endraw %}

{% endif %}
{% endif %}

{% raw %}
# --cluster-store consul://{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address']] }}:8500 --cluster-advertise {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address']] }}:2375
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
{% endraw %}