- name: Remove old software packages
  apt:
    name: "{{ packages_to_remove_check }}"
    state: absent
  ignore_errors: true
 
# - name: Remove old docker
#   raw: apt remove -y -qq docker docker-engine docker.io
#   ignore_errors: true
#   when: docker_full_reinstall is defined

- name: APT INSTALL COMMON PACKAGES | Install common software packages
  apt:
    name: "{{ packages_list }}"
    state: latest
    update_cache: yes

- name: APT ADD DOCKER GPG KEY | Shell install - add key
  shell: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -a"
  ignore_errors: true

- name: SELECTED TEST RELEASE | Remove docker-ce download bin branch - stable repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: absent
  when: docker_test_release == 'True'

- name: STABLE RELEASE CHANGES | Remove docker-ce download bin branch - test repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} test"
    state: absent
  when: docker_test_release != 'True' or docker_test_release is not defined

- name: STABLE RELEASE CHANGES | Remove docker project branch - test repository
  apt_repository:
    repo: "deb https://apt.dockerproject.org/repo ubuntu-{{ ansible_lsb.codename }} test"
    state: absent
  when: docker_test_release != 'True' or docker_test_release is not defined

- name: STABLE RELEASE ADD APT LIST | Add docker-ce download bin branch - stable repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
  when: docker_test_release != 'True' or docker_test_release is not defined

- name:  SELECTED TEST RELEASE | Add docker-ce download bin branch - test repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} test"
    state: present
  when: docker_test_release == 'True'

- name: APT UPDATE CHACHE | Update apt package cache
  apt:
    state: latest
    update_cache: yes

- name: APT INSTALL DOCKER PACKAGES | Install new docker software packages
  apt:
    name: "docker-ce"
    state: latest
    update_cache: yes

# - name: Raw install - apt get update
#   raw: apt-get update -y -qq

# - name: Raw install - install docker engine ce
#   raw: apt-get install -y docker-ce

- name: Pip install docker
  pip:
    name: docker
    state: present
    extra_args: --ignore-installed
  
- name: Set DOCKER_OPTS to Docker Daemon systemd.docker.j2 
  template:
      src: systemd.docker.j2
      dest: /lib/systemd/system/docker.service

- name: Services daemon-reload 
  raw: systemctl daemon-reload

- name: Service Docker restart 
  raw: systemctl restart docker

- name: GET DOCKER PS
  raw: docker ps
  register: docker_output
  
- name: DEBUG | Show docker ps
  debug: 
    msg: "{{ docker_output.stdout_lines }}"
    
- name: GET DOCKER VERSION
  raw: docker -v
  register: docker_installed_version
  
- name: DEBUG | show docker -v
  debug: 
    msg: "{{ docker_installed_version.stdout_lines }}"