

transport.profiles.client.bind_host: 0.0.0.0
transport.profiles.default.port: 9300
transport.profiles.client.publish_host: 0.0.0.0
transport.profiles.client.port: 9400
network.publish_host: 0.0.0.0
http.port: 9200
cluster.name: logging
node.name: log-es-cl-{{ ansible_environment }}-{{ inventory_hostname }}.{{ public_consul_domain }}
path.data: /var/data/elasticsearch
path.logs: /var/log/elasticsearch
network.host: 0.0.0.0
transport.profiles.default.bind_host: 0.0.0.0

node.data: true
node.master: true
node.ingest: true
bootstrap.memory_lock: false

discovery.seed_hosts: [{% for host in groups['logging-elasticsearch-cluster'] %}"log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}"{% if not loop.last %}, {% endif %}{% endfor %}]
# discovery.seed_hosts:
#{% for host in groups['logging-elasticsearch-cluster'] %}
#  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
#{% endfor %}

cluster.initial_master_nodes: 
{% if inventory_hostname == logging_cluster_es_master %}
{% for host in groups['logging-elasticsearch-cluster'] %}
  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endfor %}
{% else %}
{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host == logging_cluster_es_master  and logging_cluster_es_master != inventory_hostname %}
  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endif %}
{% endfor %}
{% endif %}

{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host == logging_cluster_es_master and logging_cluster_es_master != inventory_hostname %}
# cluster.initial_master_nodes: 
#  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endif %}
{% endfor %}

{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host == logging_cluster_es_master  and logging_cluster_es_master != inventory_hostname %}
# cluster.initial_master_nodes: 
#  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endif %}
{% endfor %}


# cluster.initial_master_nodes:
{% for host in groups['logging-elasticsearch-cluster'] %}
#  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endfor %}

{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host == logging_cluster_es_master and logging_cluster_es_master == inventory_hostname %}
# cluster.initial_master_nodes: 
# - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
# node.master: true
{% endif %}
{% endfor %}

{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host != logging_cluster_es_master and host == inventory_hostname  %}
# cluster.initial_master_nodes: 
#  - "log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}.{{ public_consul_domain }}"
{% endif %}
{% endfor %}

xpack.security.enabled: false

################################################
# # first
# cluster.name: paris
# node.name: parisx
# path.data: /var/lib/elasticsearch
# path.logs: /var/log/elasticsearch
# network.host: 172.31.46.15
# discovery.seed_hosts: ["172.31.46.15", "172.31.47.43"]
# cluster.initial_master_nodes: ["172.31.46.15"]
# node.master: true

# # other
# cluster.name: paris
# node.name: paris2x
# path.data: /var/lib/elasticsearch
# path.logs: /var/log/elasticsearch
# network.host: 172.31.47.43
# discovery.seed_hosts: ["172.31.47.43","172.31.46.15"]
# cluster.initial_master_nodes: ["172.31.46.15"]
{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host != logging_cluster_es_master and host == inventory_hostname  %}
# cluster.initial_master_nodes: ["log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}"]
{% endif %}
{% endfor %}
{% for host in groups['logging-elasticsearch-cluster'] %}
{% if host == logging_cluster_es_master and logging_cluster_es_master == inventory_hostname  %}
#cluster.initial_master_nodes: ["log-es-cl-{{ ansible_environment }}-{{ hostvars[host].inventory_hostname }}"]
#node.master: true
{% endif %}
{% endfor %}