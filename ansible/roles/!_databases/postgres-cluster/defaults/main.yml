---
pgsqlrep_wal_level: hot_standby
pgsqlrep_max_wal_senders: "{{ groups['POSTGRES_CLUSTER_FULL'] | length * 2 }}"
pgsqlrep_group_name: database_replica
pgsqlrep_group_name_master: database
pgsqlrep_master_address: "{{ hostvars[groups['POSTGRES_CLUSTER_BOOTSTRAP'][0]].ansible_default_ipv4.address }}"
pgsqlrep_replica_address: "{{ groups['POSTGRES_CLUSTER_FULL'] | map('extract', hostvars, 'ansible_default_ipv4') | map(attribute='address') | list }}"
pgsqlrep_wal_keep_segments: 100
pgsqlrep_synchronous_commit: local
pgsqlrep_application_name: awx
bundle_install: false

postgres_cluster_settings_defaults:
    directories:
        main_path: /opt/postgres/default
        data_path: /opt/postgres/default/data
        config_path: /opt/postgres/default/configuration
        archive_path: /opt/postgres/default/archive
    use_datastore_container: true
    datastore_container_name: postgres-datastore
    postgres_docker_tag: ''
    postgres_container_name: postgres
    postgres_docker_env: []
    expose_host_port: 0
    pg_port: 5432

    pgsqlrep_role: skip
    #pgsqlrep_data_path: /var/lib/pgsql/{{ pgsql_version }}/data
    pgsqlrep_user: replicator
    pgsqlrep_password: default-pwd
    # pgsqlrep_password: '' # Store this in an Ansible vault

    pgsqlrep_postgres_conf_lines:
        - regexp: '#?wal_level = \w+(\s+#.*)'
          line: 'wal_level = {{ pgsqlrep_wal_level }}\1'

        - regexp: '#?max_wal_senders = \d+(\s+#.*)'
          line: 'max_wal_senders = {{ pgsqlrep_max_wal_senders }}\1'

        - regexp: '#?wal_keep_segments = .*(\s+#.*)'
          line: 'wal_keep_segments = {{ pgsqlrep_wal_keep_segments }}\1'

        - regexp: '#?synchronous_standby_names = .*'
          line: "synchronous_standby_names = '{{ pgsqlrep_application_name }}'"

        - regexp: '#?synchronous_commit = \w+(\s+#.*)'
          line: 'synchronous_commit = {{ pgsqlrep_synchronous_commit }}\1'