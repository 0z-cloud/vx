- name: ETCD DEBUG | Gen CA primary certificate
  shell: cfssl gencert -initca /opt/ca/templates/ca-csr-master.json | cfssljson -bare /opt/ca/etcd/ca
  register: ca_primary_gen
  when: inventory_hostname in groups['kubernetes-master'][0] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD DEBUG | Show result of generating CA root certificate
  debug:
    msg: "{{ ca_primary_gen.stderr_lines }}"
  when: debug_playbook_stdout is defined and inventory_hostname in groups['kubernetes-master'][0] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD GENERATE CERT | Generate Kubernetes Certificate
  shell: |
    cfssl gencert \
    -ca=/opt/ca/etcd/ca.pem \
    -ca-key=/opt/ca/etcd/ca-key.pem \
    -config=/opt/ca/templates/ca-config.json \
    -hostname={{ LOAD_BALANCER_DNS }},{{ K8S_CLUSTER_ADDRESS }},{{ CALICO_ETCD_CLUSTER_IP }},127.0.0.1,kubernetes.default,{% for host in groups['kubernetes-master'] %}{{ hostvars[host]['second_ip'] | join }}{% if not loop.last %},{% endif %}{% endfor %} -profile=kubernetes /opt/ca/templates/kubernetes-csr.json | cfssljson -bare /opt/ca/etcd/kubernetes
  register: kubernetes_cert_primary_gen
  when: inventory_hostname in groups['kubernetes-master'][0] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD DEBUG | Show result of generating Kubernetes primary certificate
  debug:
    msg: "{{ kubernetes_cert_primary_gen.stderr_lines }}"
  when: debug_playbook_stdout is defined and inventory_hostname in groups['kubernetes-master'][0] and inventory_hostname not in groups['kubernetes-worker']

# ######## INIT PHASE SECOND - SYNC FROM FIRST MASTER

- name: ETCD SYNC BETWEEN HOSTS | Copy new certificates from first master to all nodes
  synchronize:
    src: "{{ ca_service_settings.directories.ca }}/etcd"
    dest: "{{ ca_service_settings.directories.ca }}"
  delegate_to: "{{ groups['kubernetes-master'][0] }}"
  tags: certificates_copy

- name: ETCD STATUS | Register result of phase 1
  shell: ls -la {{ ca_service_settings.directories.ca }}/etcd/
  register: result_opt_ca_kaje_init

- name: ETCD DEBUG | Show Result /opt/ca/pki directory
  debug:
    msg: "{{ result_opt_ca_kaje_init.stdout_lines }}"
  when: debug_playbook_stdout is defined

- name: ETCD COPY | Moving certificates to /etc/etcd
  shell: cp {{ ca_service_settings.directories.ca }}/etcd/ca.pem {{ ca_service_settings.directories.ca }}/etcd/kubernetes.pem {{ ca_service_settings.directories.ca }}/etcd/kubernetes-key.pem /etc/etcd/
  when: inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD CERTS | Register result of /etc/etcd
  shell: ls -la /etc/etcd/
  register: result_etcd_ca_kaje_init
  when: inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD DEBUG | Show Result /etc/etcd/ directory
  debug:
    msg: "{{ result_etcd_ca_kaje_init.stdout_lines }}"
  when: debug_playbook_stdout is defined and inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD CONF | Tempalte Etcd configuration
  template: 
    src: etcd.service
    dest: /etc/systemd/system/etcd.service
  when: inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD RESTART | Shell reload and restart etcd
  shell: "{{ item }}"
  with_items:
    - systemctl daemon-reload
    - systemctl enable etcd
    - systemctl restart etcd
  when: inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD STATUS | Register status of etcd cluster
  shell: ETCDCTL_API=3 etcdctl member list
  register: result_etcd_ca_kaje_init_restart
  when: inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']

- name: ETCD DEBUG | Show status of etcd cluster
  debug:
    msg: "{{ result_etcd_ca_kaje_init_restart.stdout_lines }}"
  when: debug_playbook_stdout is defined and inventory_hostname in groups['kubernetes-master'] and inventory_hostname not in groups['kubernetes-worker']