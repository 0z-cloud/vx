---
- name: Disallow root login remotely
  command: 'mysql -u root -NBe "{{ item }}"'
  with_items:
    - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
  changed_when: False
  become: yes
  become_user: "{{ cmon_ssh_user }}"

- name: Check if root password has been configured.
  stat: path="{{ mysql_user_home }}/.my.cnf"
  register: root_password_configured

- name: Setup MySQL root password for localhost.
  mysql_user:
    name: "{{ mysql_root_username }}"
    password: "{{ mysql_root_password }}"
    host: localhost
    state: present
  when: root_password_configured.stat.exists == false

- name: Copy .my.cnf file with root password credentials.
  template:
    src: "user-my.cnf.j2"
    dest: "{{ mysql_user_home }}/.my.cnf"
    owner: root
    group: root
    mode: 0600

- name: Update MySQL root password for other hosts.
  mysql_user:
    name: "{{ mysql_root_username }}"
    password: "{{ mysql_root_password }}"
    host: "{{ item }}"
    state: present
  with_items:
    - 127.0.0.1
    - ::1
  when: root_password_configured.stat.exists == false

- name: Remove anonymous MySQL users.
  mysql_user:
    name: ""
    host_all: yes
    state: absent

- name: Remove MySQL test database.
  mysql_db:
    name: test
    state: absent

- name: Check if ClusterControl Controller database is exist.
  command: mysqlshow -u root 'cmon' 'hosts'
  register: cmon_db
  ignore_errors: yes
  become: yes
  become_user: "{{ cmon_ssh_user }}"

- name: Check if ClusterControl UI database is exist.
  command: mysqlshow -u root 'dcps' 'apis'
  ignore_errors: yes
  become: yes
  become_user: "{{ cmon_ssh_user }}"

- name: Import ClusterControl Controller database.
  shell:
    mysql -u root < "{{ cmon_sql_path }}/cmon_db.sql" &&
    mysql -u root < "{{ cmon_sql_path }}/cmon_data.sql"
  register: cmon_db_import
  when: "'Unknown' in cmon_db.stderr"
  become: yes
  become_user: "{{ cmon_ssh_user }}"

- name: Import ClusterControl UI database.
  shell: mysql -u root < {{ apache_doc_root }}/clustercontrol/sql/dc-schema.sql
  register: ccui_db_import
  when:
    ("'Unknown' in dcps_db.stderr") or
    (rh_clustercontrol_ui_install_packages.changed) or
    (deb_clustercontrol_ui_install_packages.changed)
  become: yes
  become_user: "{{ cmon_ssh_user }}"
