---
- name: create grafana dir
  file: 
    path: /opt/grafana/{{ ansible_environment }}/{{ item }}
    state: directory
    mode: 0777
  with_items:
    - etc
    - lib
    - data

- name: create grafana config
  template: 
    src: grafana.ini.j2
    dest: /opt/grafana/{{ ansible_environment }}/etc/grafana.ini

- name: Stop Cadvisor
  shell: "docker -H :2375 ps -a | grep cadvisor-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker -H :2375 stop ID"
  when: swarm_disabled_inventory is not defined

- name: Stop Cadvisor
  shell: "docker ps -a | grep cadvisor-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker stop ID"
  when: swarm_disabled_inventory is defined

- name: Very Dry Remove Grafana
  shell: "docker -H :2375 ps -a | grep grafana-{{ ansible_environment }}-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker -H :2375 rm -f ID"
  when: swarm_disabled_inventory is not defined

- name: Very Dry Remove Grafana
  shell: "docker ps -a | grep grafana-{{ ansible_environment }}-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker rm -f ID"
  when: swarm_disabled_inventory is defined

- name: Install Grafana in Swarm Networks
  docker_container:
    name: "grafana-{{ ansible_environment }}-{{ inventory_hostname }}"
    image: grafana/grafana
    hostname: "{{ ansible_hostname }}"
    volumes:
    #    - "/opt/grafana/{{ ansible_environment }}/lib:/var/lib/grafana"
        - "/opt/grafana/{{ ansible_environment }}/data:/var/lib/grafana"
        - "/opt/grafana/{{ ansible_environment }}/etc/grafana.ini:/etc/grafana/grafana.ini"
    # networks:
    #   - name: "{{ swarm_masters.overlay_network.network_name }}"
    #     ipv4_address: "{{ grafana_overlay_network_ip }}"
    ports:
        - "{{ grafana_internal_service_listen_port }}:3000"
    privileged: yes
    state: started
    restart_policy: unless-stopped
    recreate: yes
  when: swarm_disabled_inventory is not defined

- name: Install Grafana without Swarm
  docker_container:
    name: "grafana-{{ ansible_environment }}-{{ inventory_hostname }}"
    image: grafana/grafana
    hostname: "{{ ansible_hostname }}"
    volumes:
    #     - "/opt/grafana/{{ ansible_environment }}/lib:/var/lib/grafana"
        - "/opt/grafana/{{ ansible_environment }}/etc/grafana.ini:/etc/grafana/grafana.ini"
    ports:
        - "{{ grafana_internal_service_listen_port }}:3000"
    privileged: yes
    state: started
    restart_policy: unless-stopped
    recreate: yes
  when: swarm_disabled_inventory is defined

# - name: create nginx for grafana dir
#   file: "path=/opt/grafana-nginx/{{ ansible_environment }}/etc state=directory mode=0755"

# - name: create nginx for grafana config
#   template: "src=nginx.conf.j2 dest=/opt/grafana-nginx/{{ ansible_environment }}/etc/nginx.conf"

# - name: Very Dry Remove Grafana NGINX
#   shell: "docker -H :2375 ps -a | grep grafana-nginx-{{ ansible_environment }}-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker -H :2375 rm -f ID"
#   when: swarm_disabled_inventory is not defined

# - name: Very Dry Remove Grafana NGINX
#   shell: "docker ps -a | grep grafana-nginx-{{ ansible_environment }}-{{ inventory_hostname }} | awk '{print $1}' | xargs -I ID docker rm -f ID"
#   when: swarm_disabled_inventory is defined

# - name: install nginx for grafana
#   docker_container:
#     name: "grafana-nginx-{{ ansible_environment }}-{{ inventory_hostname }}"
#     image: nginx
#     ports:
#         - "{{ grafana_service_listen_port }}:3081"
#     volumes:
#         - "/opt/grafana-nginx/{{ ansible_environment }}/etc/nginx.conf:/etc/nginx/nginx.conf"
#     # networks:
#     #   - name: "{{ swarm_masters.overlay_network.network_name }}"
#     #     ipv4_address: "{{ nginx_grafana_overlay_network_ip }}"
#     privileged: yes
#     state: started
#     restart_policy: unless-stopped
#     recreate: yes 
#   when: swarm_disabled_inventory is not defined

# - name: install nginx for grafana
#   docker_container:
#     name: "grafana-nginx-{{ ansible_environment }}-{{ inventory_hostname }}"
#     image: nginx
#     ports:
#         - "{{ grafana_service_listen_port }}:3081"
#         - "{{ grafana_nginx_web_service_listen_port }}:80"
#     volumes:
#         - "/opt/grafana-nginx/{{ ansible_environment }}/etc/nginx.conf:/etc/nginx/nginx.conf"
#     privileged: yes
#     state: started
#     restart_policy: unless-stopped
#     recreate: yes 
#   when: swarm_disabled_inventory is defined