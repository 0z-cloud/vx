apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5yb2NrZXRoby5tZSI6eyJwYXNzd29yZCI6IjEyMzRRNTY3OFdlIiwidXNlcm5hbWUiOiJycGF5LXRlc3QifX19
  kind: Secret
  metadata:
    annotations:
      field.cattle.io/creatorId: user-rxbgq
      field.cattle.io/projectId: c-4rvhr:p-mx54f
      lifecycle.cattle.io/create.secretsController_c-4rvhr: "true"
      secret.user.cattle.io/secret: "true"
    creationTimestamp: "2019-07-02T17:47:03Z"
    labels:
      cattle.io/creator: norman
    name: dc-pdbff
    namespace: registry
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL3JlZ2lzdHJ5LnJvY2tldGhvLm1lIjp7InBhc3N3b3JkIjoiMTIzNFE1Njc4V2UiLCJ1c2VybmFtZSI6InJwYXktdGVzdCJ9fX0=
  kind: Secret
  metadata:
    annotations:
      field.cattle.io/creatorId: user-rxbgq
      field.cattle.io/projectId: c-4rvhr:p-mx54f
      lifecycle.cattle.io/create.secretsController_c-4rvhr: "true"
      secret.user.cattle.io/secret: "true"
    creationTimestamp: "2019-07-02T17:45:23Z"
    labels:
      cattle.io/creator: norman
    name: registry
    namespace: registry
  type: kubernetes.io/dockerconfigjson
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZYekNDQkVlZ0F3SUJBZ0lTQXhVQURPRHpraCszSDg3S3F5a2tnNnZrTUEwR0NTcUdTSWIzRFFFQkN3VUEKTUVveEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1TTXdJUVlEVlFRRApFeHBNWlhRbmN5QkZibU55ZVhCMElFRjFkR2h2Y21sMGVTQllNekFlRncweE9UQTNNREV5TURJMk5UZGFGdzB4Ck9UQTVNamt5TURJMk5UZGFNQjh4SFRBYkJnTlZCQU1URkhKbFoybHpkSEo1TG5KdlkydGxkR2h2TG0xbE1JSUIKSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTNWSjVVVUJIcDdTVThER0Zldlc0Z1hYWApJdG5wY1hBYzd3d0dvU0xwRjByckpQS2VOMFE3WWNiWVN6dnlBL0tmdERDK3B5OG5taHFERVpmTnRhRzlRbE41ClR1bVRqeXhvV0NvcFlSSENWOFZoVThrOGlTZGhRUTc3aEtpZ0x6RndiL3d2ODdndng1WEVSV0NkMXJoTmw0WGMKNklsKzlJQ1NpczlHM0lSN2YwYk1HbkFJSStkajhtQ0ZMekdZNEMrUjRnVGRwUnArL1hSWTE4MzBFd09jdm5aKwovSWtUNWtSOTN3UHhTUHlXMno4bkx2VVY1RDl3OTlRc2V4WkoyelhpaGRyQ0ltZGhPM3gxaXNMMEdKQUlEUmpTCkUrb2QxNzErb2dVbTY5R0k2d1NUYWxpZkhOV2M1dWorREplc0NvZXhPWTdaUHY2ZXVrN2Q5Z0t0SVQwSWhRSUQKQVFBQm80SUNhRENDQW1Rd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQgpCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUm85WXBnY3g1cmUwNUxXaXpNCm1DdlltcVdjMWpBZkJnTlZIU01FR0RBV2dCU29TbXBqQkgzZHV1YlJPYmVtUldYdjg2anNvVEJ2QmdnckJnRUYKQlFjQkFRUmpNR0V3TGdZSUt3WUJCUVVITUFHR0ltaDBkSEE2THk5dlkzTndMbWx1ZEMxNE15NXNaWFJ6Wlc1agpjbmx3ZEM1dmNtY3dMd1lJS3dZQkJRVUhNQUtHSTJoMGRIQTZMeTlqWlhKMExtbHVkQzE0TXk1c1pYUnpaVzVqCmNubHdkQzV2Y21jdk1COEdBMVVkRVFRWU1CYUNGSEpsWjJsemRISjVMbkp2WTJ0bGRHaHZMbTFsTUV3R0ExVWQKSUFSRk1FTXdDQVlHWjRFTUFRSUJNRGNHQ3lzR0FRUUJndDhUQVFFQk1DZ3dKZ1lJS3dZQkJRVUhBZ0VXR21oMApkSEE2THk5amNITXViR1YwYzJWdVkzSjVjSFF1YjNKbk1JSUJBd1lLS3dZQkJBSFdlUUlFQWdTQjlBU0I4UUR2CkFIWUE0bWxMcmlibzZVQUo2SVlidGp1RDFEN24vblNJKzZTUEtKTUJuZDN4Mi80QUFBRnJyMjhHWWdBQUJBTUEKUnpCRkFpQUU1MXYvR1dKTzUyNzRlYkJqUkpiaGlacWhPOWF0TGtZQ3lYQU9NNHZMU1FJaEFMMktSMmU5Um5JYwpPUHI4UnpkaG1sQ3RwOG5LRlJvMGdWcWNib0JwWlNXR0FIVUFZL0xiemVnN3pDelBDM0tFSjFkck02U05ZWGVQCnZYV21PTEhIYUZSTDJJMEFBQUZycjI4R2lBQUFCQU1BUmpCRUFpQmorcGFDOWZvckk2Z0NDL1h3TVc4c2lXcHEKcnp4VWVRa0hNRGlndm91SkFBSWdBaXl2bnRNanIzdGlJcFRsRDlvQ0FmMTlzRUlPdFFVcUVQNmNXOHAreUdNdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR0Z5L2pSaHEvVDFWamhJVDh1OEU2WjBSUzJXcjQyM2V5N3dudlhVClpYWmJlMGZjcHo3b1p1ejRzVWdCQ2VLbkdkZG9Ma3NnaDBnM0IrVkpXNkx5ZTVnT2lEcFhkcktneDJVY0lQVkQKWklVZzU2QURxYW4wbjdpMFNQeWxJbXlLbk5FWW9UVlFSNEJNVWNMdjhpWHU3VG5Sa1IxWTNBZXlVRUQ3Zm5zSQpqeDFGSWNPelZXM1hhcGRCQ0NUaVRud1UweTJxRE14UUh5a1BXRUNPQXNRNlV4NkYveWx6OU9URFovb1g5eVFoCmpSN05yNG1mKzl4Q2ZvU0JQQVU3ckVBODNDenowMjN6SXNJb0FScnNZeUFPOEhqU1c1aWNSY2ZjbUQ5K0VzUjAKMDZEYWJKMnMrejdHdERpSWhnYXVvaWE4bTN4eStDa0VTdm14aGpnNmYzRE9wZlk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVrakNDQTNxZ0F3SUJBZ0lRQ2dGQlFnQUFBVk9GYzJvTGhleW5DREFOQmdrcWhraUc5dzBCQVFzRkFEQS8KTVNRd0lnWURWUVFLRXh0RWFXZHBkR0ZzSUZOcFoyNWhkSFZ5WlNCVWNuVnpkQ0JEYnk0eEZ6QVZCZ05WQkFNVApEa1JUVkNCU2IyOTBJRU5CSUZnek1CNFhEVEUyTURNeE56RTJOREEwTmxvWERUSXhNRE14TnpFMk5EQTBObG93ClNqRUxNQWtHQTFVRUJoTUNWVk14RmpBVUJnTlZCQW9URFV4bGRDZHpJRVZ1WTNKNWNIUXhJekFoQmdOVkJBTVQKR2t4bGRDZHpJRVZ1WTNKNWNIUWdRWFYwYUc5eWFYUjVJRmd6TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQwpBUThBTUlJQkNnS0NBUUVBbk5NTThGcmxMa2UzY2wwM2c3Tm9ZekRxMXpVbUdTWGh2YjQxOFhDU0w3ZTRTMEVGCnE2bWVOUWhZN0xFcXhHaUhDNlBqZGVUbTg2ZGljYnA1Z1dBZjE1R2FuL1BRZUdkeHlHa09sWkhQL3VhWjZXQTgKU014K3lrMTNFaVNkUnh0YTY3bnNIamNBSEp5c2U2Y0Y2czVLNjcxQjVUYVl1Y3Y5YlR5V2FOOGpLa0tRRElaMApaOGgvcFpxNFVtRVVFejlsNllLSHk5djZEbGIyaG9uemhUK1hocSt3M0JydmF3MlZGbjNFSzZCbHNwa0VObldBCmE2eEs4eHVRU1hndm9wWlBLaUFsS1FUR2RNRFFNYzJQTVRpVkZycW9NN2hEOGJFZnd6Qi9vbmt4RXowdE52amoKL1BJemFyazVNY1d2eEkwTkhXUVdNNnI2aENtMjFBdkEySDNEa3dJREFRQUJvNElCZlRDQ0FYa3dFZ1lEVlIwVApBUUgvQkFnd0JnRUIvd0lCQURBT0JnTlZIUThCQWY4RUJBTUNBWVl3ZndZSUt3WUJCUVVIQVFFRWN6QnhNRElHCkNDc0dBUVVGQnpBQmhpWm9kSFJ3T2k4dmFYTnlaeTUwY25WemRHbGtMbTlqYzNBdWFXUmxiblJ5ZFhOMExtTnYKYlRBN0JnZ3JCZ0VGQlFjd0FvWXZhSFIwY0RvdkwyRndjSE11YVdSbGJuUnlkWE4wTG1OdmJTOXliMjkwY3k5awpjM1J5YjI5MFkyRjRNeTV3TjJNd0h3WURWUjBqQkJnd0ZvQVV4S2V4cEhzc2NmcmI0VXVRZGYvRUZXQ0ZpUkF3ClZBWURWUjBnQkUwd1N6QUlCZ1puZ1F3QkFnRXdQd1lMS3dZQkJBR0MzeE1CQVFFd01EQXVCZ2dyQmdFRkJRY0MKQVJZaWFIUjBjRG92TDJOd2N5NXliMjkwTFhneExteGxkSE5sYm1OeWVYQjBMbTl5WnpBOEJnTlZIUjhFTlRBegpNREdnTDZBdGhpdG9kSFJ3T2k4dlkzSnNMbWxrWlc1MGNuVnpkQzVqYjIwdlJGTlVVazlQVkVOQldETkRVa3d1ClkzSnNNQjBHQTFVZERnUVdCQlNvU21wakJIM2R1dWJST2JlbVJXWHY4Nmpzb1RBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUEzVFBYRWZOaldEamRHQlg3Q1ZXK2RsYTVjRWlsYVVjbmU4SWtDSkx4V2g5S0VpazNKSFJSSEdKbwp1TTJWY0dmbDk2UzhUaWhSelp2b3JvZWQ2dGk2V3FFQm10enczV29kYXRnK1Z5T2VwaDRFWXByLzF3WEt0eDgvCndBcEl2SlN3dG1WaTRNRlU1YU1xclNERTZlYTczTWoydGNNeW81ak1kNmptZVdVSEs4c28vam9XVW9IT1Vnd3UKWDRQbzFRWXorM2RzemtEcU1wNGZrbHhCd1hSc1cxMEtYelBNVForc09QQXZleXhpbmRtamtXOGxHeStRc1JsRwpQZlorRzZaNmg3bWplbTBZK2lXbGtZY1Y0UElXTDFpd0JpOHNhQ2JHUzVqTjJwOE0rWCtRN1VOS0VrUk9iM042CktPcWtxbTU3VEgySDNlREpBa1NuaDYvRE5GdTBRZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM1ZKNVVVQkhwN1NVOERHRmV2VzRnWFhYSXRucGNYQWM3d3dHb1NMcEYwcnJKUEtlCk4wUTdZY2JZU3p2eUEvS2Z0REMrcHk4bm1ocURFWmZOdGFHOVFsTjVUdW1Uanl4b1dDb3BZUkhDVjhWaFU4azgKaVNkaFFRNzdoS2lnTHpGd2Ivd3Y4N2d2eDVYRVJXQ2QxcmhObDRYYzZJbCs5SUNTaXM5RzNJUjdmMGJNR25BSQpJK2RqOG1DRkx6R1k0QytSNGdUZHBScCsvWFJZMTgzMEV3T2N2blorL0lrVDVrUjkzd1B4U1B5VzJ6OG5MdlVWCjVEOXc5OVFzZXhaSjJ6WGloZHJDSW1kaE8zeDFpc0wwR0pBSURSalNFK29kMTcxK29nVW02OUdJNndTVGFsaWYKSE5XYzV1aitESmVzQ29leE9ZN1pQdjZldWs3ZDlnS3RJVDBJaFFJREFRQUJBb0lCQUQvazEzRkZoV285RCtKbgo2WWtkOXk0b3Z2c292ZVFwNGJDQllFaVVzNFl0OHNTdjVrMCtQWVoweVd5dTJhZWFHOUVCWVlrU2EvUnBRdjJKClBiSDZCNUZtVjljWVI2bEZ3TG56TWc3NytZY3RUSFBMM05ZYnNFLy82MHpaQWFXZU9EK2NKcHZOeUwxdDEwUFEKS01FY1pBb2ljeXdPeGNBQWZrM2ttU2lBZHNhL045OFE4ZGNrUUZPMTJ6K0k1RzR4Z0Rsd2VvNWlGdGxleVNhLworMzFSd1VmanBaTklrTmc5TFN6TngvL1lITXZxa1AybnFCWGtCL3Z4RnRIUnlFR01DazRGVVdhaTljcXE3bXdVCllnMXpaWitieTJGSEdmNXJLWXp4NVY5TVkrTU1vTnNSN1ZvaTllbndTZWQ5ZnI2V05ndEd2TXVRbSt2VENOOEoKbm5iL0pBRUNnWUVBL25SNjlCUEptT2VmeGdEY2JGOFRtS0tkcGhQcVU3NGpyZy8yd1dNY0FqUHRzbnVPWmlGcgpCVTgvcWpMelcvYjBPaDZOakNXSnRQbFd1SHRqblhkNjBUaWlzSDBhTEh2VzlqWkg4amY1SENkMERFU2dobUtVCkF4UTRUSG8zL05GM0VWc215ZGZZcWVFMjdXaDBYakRtK2RhbHBESjU5RGxFekxObjFiazhZS0VDZ1lFQTNxcCsKR3NYaXpvR2hlbDlQMFBEMFlKVUVBcWFPMEE3YWJkODB6TUd4dDJ1ZUtFOXRsRklITDNnaEZreXl5WnpjQkRtKwowSFpZckJVWlNmWFc2RS80MHREMVpjNlhubTJXT0ZXaUcvQ0pQYkNWay9MQ0llL1hwazh3RlRScTJiZ2dCTzZUClA0TG1id0ZJSmk5WmMxc2hXM2ROKzRvZUtpeG4yajVaZnI2OVNXVUNnWUVBd3YwbG4xWnVmUks1OS9SKzlUamkKZm12VzNRYVQ0YnBxQXgvT21xRkZQRmJveG9ZeU9BZFJ5STdUSGF6UG1tQ2pCTXFXODVkc2NGZEY0amNEdmc1cAorbHdwSjQrbWVBSXFWeUIvZjVqdTkya3dYNXBUWE1lNzNxUW5CRXdBRFdmQ2szVkRReGQ1dTZ5Tzk5eThsOVZuCm1ucW5FaTF3RVB1MXdodVU3VTEyZkNFQ2dZQXFnNEQ2V2FnWlo3VE9LWjZTdFQ3anBmQVRGWHdWQzVEM0EzUVEKV0RjM1h5dmVaSFAycXNiR2NIaFl5cUlrVG5mUHNyclZFSk9UbjUrcGVHL2xBVWZ2OEllNlBYekRlZ2NCa0pBWQpKNC84b0ZlZTNPM21EdVlzMGRmTFpLdTJFQ3JFNWt4bEJ2ZzZYNU5IL3loa0Z4VkNZb0FZTStIWWlZdjJwb3J0CjRUdEE1UUtCZ0VWWWVibExDTjRDVENzbnFDWDhJN0FQR0ZoNWpzTkp5WG5mMm9FdC9yZC9GQVkzWC81b1g1QXEKYTAyT2J5amhHZHRBR0NaekxhNDBmWHQ0OTVGbFkwK1JkQVBCUFNGRzlaMmJGeUovRkZ4cE54WlN2TXQ5NDBvZApWd2VaRjJnMjV2ZS8vRzV0eWhCOXUrZ3ZpbG5iUDlabFZiUVArZVBaWVltM3JxaHUycFQrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  kind: Secret
  metadata:
    annotations:
      certmanager.k8s.io/alt-names: registry.rocketho.me
      certmanager.k8s.io/common-name: registry.rocketho.me
      certmanager.k8s.io/issuer-kind: ClusterIssuer
      certmanager.k8s.io/issuer-name: letsencrypt-prod
    creationTimestamp: "2019-07-01T21:26:58Z"
    labels:
      certmanager.k8s.io/certificate-name: registry-rocketho-me-crt
    name: registry-rocketho-me-crt
    namespace: registry
  type: kubernetes.io/tls
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
