apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: null
  generation: 1
  labels:
    app: cert-manager
    chart: cert-manager-v0.5.2
    heritage: Tiller
    io.cattle.field/appId: cert-manager
    release: cert-manager
  name: cert-manager
  selfLink: /apis/extensions/v1beta1/namespaces/cert-manager/deployments/cert-manager
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: cert-manager
      release: cert-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-06-27T19:52:26Z"
        workload.cattle.io/state: '{"d29ya2VyMg==":"c-4rvhr:m-01925b7892e2"}'
      creationTimestamp: null
      labels:
        app: cert-manager
        release: cert-manager
    spec:
      containers:
      - args:
        - --cluster-resource-namespace=$(POD_NAMESPACE)
        - --leader-election-namespace=$(POD_NAMESPACE)
        - --default-issuer-name=letsencrypt-prod
        - --default-issuer-kind=ClusterIssuer
        - --default-acme-issuer-challenge-type=http01
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/jetstack/cert-manager-controller:v0.5.2
        imagePullPolicy: IfNotPresent
        name: cert-manager
        resources: {}
        securityContext:
          capabilities: {}
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeName: worker2
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: cert-manager
      serviceAccountName: cert-manager
      terminationGracePeriodSeconds: 30
status: {}
