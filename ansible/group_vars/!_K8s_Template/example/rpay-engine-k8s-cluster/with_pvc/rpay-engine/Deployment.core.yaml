apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "41"
    field.cattle.io/publicEndpoints: '[{"addresses":["95.217.53.7"],"port":443,"protocol":"HTTPS","serviceName":"rpay-engine:core","ingressName":"rpay-engine:core","hostname":"core.dev.rocketho.me","path":"/","allNodes":true}]'
  creationTimestamp: null
  generation: 1
  labels:
    app: core
    chart: core-0.1.0
    heritage: Tiller
    io.cattle.field/appId: rpay-engine
    release: rpay-engine
  name: core
  selfLink: /apis/extensions/v1beta1/namespaces/rpay-engine/deployments/core
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: core
      release: rpay-engine
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "1562354687"
        field.cattle.io/ports: '[[{"containerPort":3000,"dnsName":"core-","name":"core","protocol":"TCP","sourcePort":0}]]'
      creationTimestamp: null
      labels:
        app: core
        release: rpay-engine
    spec:
      containers:
      - command:
        - rails
        - server
        - -b
        - 0.0.0.0
        - -p
        - "3000"
        envFrom:
        - configMapRef:
            name: core-env
            optional: false
        image: registry.rocketho.me/core:latest
        imagePullPolicy: Always
        name: core
        ports:
        - containerPort: 3000
          name: core
          protocol: TCP
        resources: {}
        securityContext:
          capabilities: {}
          procMount: Default
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: rokethome
      - name: rokethome
      - name: rokethome
      - name: rokethome
      initContainers:
      - command:
        - bundle
        - exec
        - rake
        - db:create
        envFrom:
        - configMapRef:
            name: core-env
            optional: false
        image: registry.rocketho.me/core:latest
        imagePullPolicy: Always
        name: "1"
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      - command:
        - bundle
        - exec
        - rake
        - db:migrate
        envFrom:
        - configMapRef:
            name: core-env
            optional: false
        image: registry.rocketho.me/core:latest
        imagePullPolicy: Always
        name: "2"
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      - command:
        - bundle
        - exec
        - rake
        - db:seed
        envFrom:
        - configMapRef:
            name: core-env
            optional: false
        image: registry.rocketho.me/core:latest
        imagePullPolicy: Always
        name: "3"
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
