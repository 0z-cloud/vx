apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: null
  generation: 1
  labels:
    app: mongodb
    chart: mongodb-5.0.0
    heritage: Tiller
    io.cattle.field/appId: mongo
    release: mongo
  name: mongo-mongodb
  selfLink: /apis/extensions/v1beta1/namespaces/rpay-engine/deployments/mongo-mongodb
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      app: mongodb
      release: mongo
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2019-07-06T18:41:29Z"
        field.cattle.io/ports: '[[{"containerPort":27017,"dnsName":"mongo-mongodb","kind":"ClusterIP","name":"mongodb","protocol":"TCP"}]]'
      creationTimestamp: null
      labels:
        app: mongodb
        chart: mongodb-5.0.0
        release: mongo
    spec:
      containers:
      - env:
        - name: MONGODB_DATABASE
          value: database
        - name: MONGODB_ENABLE_IPV6
          value: "yes"
        - name: MONGODB_EXTRA_FLAGS
        - name: MONGODB_USERNAME
          value: admin
        image: bitnami/mongodb:4.0.3
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongo-mongodb
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        securityContext:
          capabilities: {}
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/mongodb
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: mongo-mongodb
status: {}
