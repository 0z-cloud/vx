version: '3.7'

networks:
  default:
    driver: overlay
    attachable: true
  vortex:
    driver: overlay
    attachable: true
volumes:
  postgres-data:
    driver: local
  business-gems:
    driver: local
  business-docs-gems:
    driver: local
  core-gems:
    driver: local
  settings-gems:
    driver: local
  guard-gems:
    driver: local

services:

############################################################################################################################################
#### SECTION 0: CLOUD BUILD
############################################################################################################################################

{% if extended_all_services_remap_docker_compose_generate is defined and extended_services_settings_map is defined %}
{% for key,value in extended_all_services_remap_docker_compose_generate.items() %}{% for app,data in extended_services_settings_map.items()%}{% if key == app %}

{% raw %}
{% endraw %}{{ key }}{% raw %}:{% endraw %}{% raw %}{% raw %}
      image: {% endraw %}{{ value['image'] }}{% raw %}:latest 
      build: {% endraw %}{{ value['image'] }}{% raw %}:latest
        context: ./{% endraw %}{{ value['build_context'] }}{% raw %}/{% endraw %}{{ key }}{% raw %}
        dockerfile: "{% endraw %}{% if value['dockerfile_context'] is defined %}{{ value['dockerfile_context'] }}{% raw %}"{% endraw %}{% else %}{% raw %}Dockerfile"
{% endraw %}{% endif %}{% if value['environment'] is defined %}{% raw %}
        args: {% endraw %}{% for de in value['environment'] %}{% raw %}
          {% endraw %}{{ de | join }}{% raw %}{% endraw %}{% endfor %}
{% endif %}{% endif %}


{% if value['command'] is defined %}{% raw %}
      command: "{% endraw %}{{ value['command'] }}{% raw %}"
{% endraw %}
{% endif %}

{% if value['volumes'] is defined %}{% raw %}
      volumes: 
{% endraw %}{% for volume in value['volumes'] %}{% raw %}
        - {% endraw %}{{ volume | join }}{% raw %}
{% endraw %}{% endfor %}
{% endif %}

{% if value['environment'] is defined %}{% raw %}
      environment:
{% endraw %}{% for de in value['environment'] %}{% raw %}
        {% endraw %}{{ de | join }}{% raw %}
{% endraw %}{% endfor %}
{% endif %}

{% if value['depends_on'] is defined %}{% raw %}
      depends_on: 
{% endraw %}{% for depend in value['depends_on'] %}{% raw %}
        - {% endraw %}{{ depend | join }}{% raw %}
{% endraw %}{% endfor %}
{% endif %}

{% if value['no_healthcheck'] is defined %}{% raw %}
      healthcheck:
        disable: true
{% endraw %}
{% endif %}

{% if value['ports'] is defined %}{% raw %}
      ports: 
        - {% endraw %}{{ value['ports'] | join }}{% raw %}
{% endraw %}
{% endif %}

{% if value['entrypoint'] is defined %}{% raw %}
      entrypoint: {% endraw %}{{ value['entrypoint'] }}{% raw %}
{% endraw %}
{% endif %}

{% if data is defined %}{% raw %}
      environment: 
        SERVICE_VERSION: latest
{% endraw %}
{% for d in data %}{% raw %}
        {% endraw %}{{ d | join }}{% raw %}
{% endraw %}{% endfor %}
{% endif %}

{% if ('mariadb' not in key) or ('elasticsearch' not in key) %}{% raw %}
      logging:
        options:
          tag: "docker_{% endraw %}{{ ansible_environment }}{% raw %}-{% endraw %}{{ key }}{% raw %}"
{% endraw %}
{% endif %}

{% if value['scale'] is defined and value['placement'] is defined %}{% raw %}
      deploy:
        mode: replicated
        replicas: {% endraw %}{{ value['scale'] }}{% raw %}
        placement:
          constraints:
            - node.role == {% endraw %}{{ value['placement'] }}{% raw %}
        restart_policy:
          condition: on-failure
          delay: 120s
          window: 120s
        update_config:
          parallelism: 1
          order: {% endraw %}{{ value['order'] }}{% raw %}
{% endraw %}

{% endif %}{% endfor %}{% endfor %}{% endif %}
